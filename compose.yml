services:
  proxy:
    image: nginxproxy/nginx-proxy:1.4
    ports:
      - '7300:80'
    environment:
      - ENABLE_IPV6=true
      - DEFAULT_ROOT="418"
      - DEFAULT_HOST=~^uploader\..*\.sslip\.io
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      - cdp-tenant

  localstack:
    image: localstack/localstack:3.0.2
    ports:
      - '4566:4566' # LocalStack Gateway
      - '4510-4559:4510-4559' # external services port range
    env_file:
      - 'compose/aws.env'
    environment:
      DEBUG: ${DEBUG:-1}
      LOCALSTACK_HOST: 127.0.0.1
      LS_LOG: WARN # Localstack DEBUG Level
      SERVICES: s3,sqs,sns,firehose
    volumes:
      - '${TMPDIR:-/tmp}/localstack:/var/lib/localstack'
      - './compose:/etc/localstack/init/ready.d'
    healthcheck:
      test: ["CMD", "stat", "/tmp/READY"]
      interval: 3s
      start_period: 5s
      retries: 20
    networks:
      - cdp-tenant

  redis:
    image: redis:7.2.11-alpine3.21
    ports:
      - '6379:6379'
    restart: always
    volumes:
      - redis-data:/data
    networks:
      - cdp-tenant

  cdp-uploader:
    image: defradigital/cdp-uploader:${CDP_UPLOADER_VERSION:-latest}
    ports:
      - '7337:7337'
    depends_on:
      localstack:
        condition: service_healthy
      redis:
        condition: service_started
    env_file:
      - 'compose/aws.env'
    environment:
      CONSUMER_BUCKETS: re-ex-summary-logs
      MOCK_VIRUS_RESULT_DELAY: 3
      MOCK_VIRUS_SCAN_ENABLED: true
      NODE_ENV: development
      PORT: 7337
      REDIS_HOST: redis
      S3_ENDPOINT: http://localstack:4566
      SQS_ENDPOINT: http://localstack:4566
      USE_SINGLE_INSTANCE_CACHE: true
      VIRTUAL_HOST: ~^uploader\..*\.sslip\.io
      VIRTUAL_PATH: /
      VIRTUAL_PORT: 7337
    networks:
      - cdp-tenant

  defra-id-stub:
    image: defradigital/cdp-defra-id-stub:${DEFRA_ID_STUB_VERSION:-latest}
    ports:
      - '3200:3200'
    depends_on:
      redis:
        condition: service_started
    environment:
      APP_BASE_URL: http://localhost:3200
      NODE_ENV: development
      OIDC_BASE_PATH: /cdp-defra-id-stub
      OIDC_CLIENT_ID: 63983fc2-cfff-45bb-8ec2-959e21062b9a
      OIDC_CLIENT_SECRET: test_value
      OIDC_SHOW_LOGIN: true
      PORT: 3200
      REDIS_HOST: redis
      SESSION_CACHE_ENGINE: redis
      USE_SINGLE_INSTANCE_CACHE: true
    networks:
      - cdp-tenant

################################################################################

  ui:
    profiles: ['all']
    build:
      context: .
      dockerfile: Dockerfile.local
    ports:
      - '3000:3000'
    extra_hosts:
      - 'localhost:host-gateway'
    develop:
      watch:
        - path: src/
          action: sync
          target: /app/src/
          ignore:
            - node_modules/
        - path: .browserslistrc
          action: rebuild
        - path: babel.config.cjs
          action: rebuild
        - path: nodemon.json
          action: rebuild
        - path: package.json
          action: rebuild
        - path: tsconfig.json
          action: rebuild
        - path: webpack.config.js
          action: rebuild
    depends_on:
      defra-id-stub:
        condition: service_started
      localstack:
        condition: service_healthy
      redis:
        condition: service_started
    env_file:
      - 'compose/aws.env'
    environment:
      CDP_UPLOADER_URL: http://cdp-uploader:7337
      DEFRA_ID_OIDC_CONFIGURATION_URL: http://localhost:3200/cdp-defra-id-stub/.well-known/openid-configuration
      EPR_BACKEND_URL: http://localhost:3001
      LOCALSTACK_ENDPOINT: http://localstack:4566
      NODE_ENV: development
      PORT: 3000
      REDIS_HOST: redis
      USE_SINGLE_INSTANCE_CACHE: true
    networks:
      - cdp-tenant

################################################################################

networks:
  cdp-tenant:
    driver: bridge

volumes:
  redis-data:
