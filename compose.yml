services:
  proxy:
    image: nginxproxy/nginx-proxy:1.4
    ports:
      - '7300:80'
    environment:
      - ENABLE_IPV6=true
      - DEFAULT_ROOT="418"
      - DEFAULT_HOST=~^uploader\..*\.sslip\.io
      - DISABLE_SSL=true
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      - cdpuploader

  localstack:
    image: localstack/localstack:3.0.2
    ports:
      - '4566:4566'
      - '4510-4559:4510-4559'
    env_file:
      - 'compose/aws.env'
    environment:
      DEBUG: ${DEBUG:-1}
      LS_LOG: WARN
      SERVICES: s3,sqs,sns,firehose
      LOCALSTACK_HOST: 127.0.0.1
    volumes:
      - '${TMPDIR:-/tmp}/localstack:/var/lib/localstack'
      - ./compose:/etc/localstack/init/ready.d
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4566/_localstack/health"]
      interval: 5s
      start_period: 10s
      retries: 20
    networks:
      - cdpuploader

  redis:
    image: redis:7.2.3-alpine3.18
    ports:
      - '6379:6379'
    restart: always
    networks:
      - cdpuploader

  cdp-uploader:
    image: defradigital/cdp-uploader:${CDP_UPLOADER_VERSION:-latest}
    ports:
      - '7337:7337'
    depends_on:
      localstack:
        condition: service_healthy
    env_file:
      - 'compose/aws.env'
    environment:
      VIRTUAL_HOST: ~^uploader\..*\.sslip\.io
      VIRTUAL_PATH: /
      VIRTUAL_PORT: 7337
      PORT: 7337
      NODE_ENV: development
      REDIS_HOST: redis
      USE_SINGLE_INSTANCE_CACHE: true
      MOCK_VIRUS_SCAN_ENABLED: true
      MOCK_VIRUS_RESULT_DELAY: 3
      SQS_ENDPOINT: http://localstack:4566
      S3_ENDPOINT: http://localstack:4566
      CONSUMER_BUCKETS: re-ex-summary-logs
    networks:
      - cdpuploader

  mongodb:
    image: mongo:6.0.13
    networks:
      - cdp-tenant
      - cdpuploader
    ports:
      - '27017:27017'
    volumes:
      - mongodb-data:/data
    restart: always

################################################################################

  ui:
    build:
      context: .
      dockerfile: Dockerfile.local
    ports:
      - '3000:3000'
    links:
      - 'localstack:localstack'
      - 'redis:redis'
    develop:
      watch:
        - path: src/
          action: sync
          target: /app/src/
          ignore:
            - node_modules/
        - path: .browserslistrc
          action: rebuild
        - path: babel.config.cjs
          action: rebuild
        - path: nodemon.json
          action: rebuild
        - path: package.json
          action: rebuild
        - path: tsconfig.json
          action: rebuild
        - path: webpack.config.js
          action: rebuild
    depends_on:
      localstack:
        condition: service_healthy
      redis:
        condition: service_started
    env_file:
      - 'compose/aws.env'
    environment:
      PORT: 3000
      NODE_ENV: development
      REDIS_HOST: redis
      LOCALSTACK_ENDPOINT: http://localstack:4566
      USE_SINGLE_INSTANCE_CACHE: true
      AWS_ENDPOINT: http://localstack:4566
      CDP_UPLOADER_URL: http://cdp-uploader:7337
    networks:
      - cdp-tenant
      - cdpuploader 

  # your-backend:
  #   image: defradigital/your-backend:${YOUR_BACKEND_VERSION:-latest}
  #   ports:
  #     - '3555:3555'
  #   links:
  #     - 'localstack:localstack'
  #     - 'mongodb:mongodb'
  #   depends_on:
  #     localstack:
  #       condition: service_healthy
  #     mongodb:
  #       condition: service_started
  #   env_file:
  #     - 'compose/aws.env'
  #   environment:
  #     PORT: 3555
  #     NODE_ENV: development
  #     LOCALSTACK_ENDPOINT: http://localstack:4566
  #   networks:
  #     - cdp-tenant

################################################################################

networks:
  cdp-tenant:
    driver: bridge
  cdpuploader:
    driver: bridge
